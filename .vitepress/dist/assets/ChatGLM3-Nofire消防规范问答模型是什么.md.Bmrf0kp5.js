import{_ as a,c as t,o as e,a5 as s}from"./chunks/framework.-Zveb6AF.js";const k=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ChatGLM3-Nofire消防规范问答模型是什么.md","filePath":"ChatGLM3-Nofire消防规范问答模型是什么.md"}'),i={name:"ChatGLM3-Nofire消防规范问答模型是什么.md"},n=s(`<p><a name="61a3ec66"></a></p><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>** ChatGLM3-Nofire消防规范问答模型<strong>是我们基于清华大学KEG实验室与智谱AI发布的ChatGLM3系列的</strong>ChatGLM3-6B<strong>模型经过对</strong>消防领域多个专业规范PDF<strong>进行知识抽取构建的</strong>QA问答数据集<strong>多次</strong>Lora微调<strong>得到的</strong>可靠、专业、智能**的问答模型，后续我们会逐步对模型进行优化，敬请期待！</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">::</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:success</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Let</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;s Go&lt;br /&gt;[快速开始](https://supreme-chainsaw-ww5g75g4wvwf5jv5-5173.app.github.dev/api-examples.html)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:::</span></span></code></pre></div><p><img src="https://img-blog.csdnimg.cn/direct/4e840706af744ddfa198da7757e6e363.png#pic_center" alt="ChatGLM3-Nofire消防规范问答模型是什么？.png"></p><hr><p><a name="c666ad11"></a></p><h2 id="特性" tabindex="-1">特性 <a class="header-anchor" href="#特性" aria-label="Permalink to &quot;特性&quot;">​</a></h2><ul><li><strong>⚡️ 专业可靠</strong> 数据收集与制作由LLM自动化处理+打分机制筛选+人工复查</li><li><strong>✅ 量化版本</strong> 避免模型过大占用显存，采用4-bit量化处理，模型更加轻量化</li><li><strong>✅ 多平台部署</strong> 兼容主流Linux系统 <code>Debain</code> <code>CentOS</code> <code>Ubuntu</code> 后续会增加 <code>docker容器</code>环境部署</li><li><strong>✅ 模型开源</strong> 代码已托管至modelscope社区，支持下载模型进行二开</li><li><strong>✅ 搭配知识图谱</strong> 以构建出消防领域专业规范实体关系知识图谱，数据量丰富</li></ul><p><a name="IlBHr"></a></p><h2 id="模型对比" tabindex="-1">模型对比 <a class="header-anchor" href="#模型对比" aria-label="Permalink to &quot;模型对比&quot;">​</a></h2><p><a name="rGd0l"></a></p><h3 id="现有ai通用大模型" tabindex="-1">现有AI通用大模型 <a class="header-anchor" href="#现有ai通用大模型" aria-label="Permalink to &quot;现有AI通用大模型&quot;">​</a></h3><p>2023-2024年期间，AI通用大模型种类繁多，姿态各异，不乏能力出众的GPT-4,LLaMA3,Claude等等，在面对市场实际的通用场景下，AI大模型能能展现出非常出色的问答变现；在面对特定领域时，AI大模型知识储备较为匮乏，表现较差；针对上述问题，我们收集消防专业领域多类技术规范进行QA数据集制作，使用现有的Lora微调技术对Ai通用模型进行参数冻结训练，将训练结果合并至原始模型得到针对消防专业领域技术规范较好问答表现的现有模型。<br>案例：<br>语言模型：如GPT、BERT等，主要应用于自然语言处理领域，如机器翻译、文本生成、情感分析等。 <br>图像模型：如ResNet、Inception等，主要应用于计算机视觉领域，如图像分类、目标检测、图像分割等。 <br>推荐模型：如DNN、RNN等，主要应用于推荐系统领域，如商品推荐、广告推荐等。 <br>聊天机器人：如Seq2Seq、Transformer等，主要应用于智能客服、智能助手等场景。 <br>金融风控：如XGBoost、LightGBM等，主要应用于银行、证券等金融机构的风控场景，如信用评分、反欺诈等。 <br>医疗影像诊断：如DeepLung、DeepLesion等，主要应用于医疗影像诊断领域，如肺癌诊断、病理学分析等。 <br>在发布会上，华为表示，华为盘古大模型主要以AI赋能产业，运用在电力、金融、农业等多个行业，其中CV大模型落地矿山，NLP大模型落地智能文档检索。</p><p><a name="hRfaZ"></a></p><h2 id="使用场景" tabindex="-1">使用场景 <a class="header-anchor" href="#使用场景" aria-label="Permalink to &quot;使用场景&quot;">​</a></h2><ul><li>在人工智能蓬勃发展的今天，传统非结构化文本形式的规范已难以满足合规审查、关联分析等法规智能应用场景。</li><li>海量复杂的规范体系为建筑设计、建造及管理人员带来了极大的挑战，如何高效的检索、查询和利用消防规范中蕴含的知识和经验已成为当前亟待解决的难题之一。</li><li>目前，有关规范仍以传统 PDF 文档、网页等形式存储和管理，检索和利用效率低，已成为消防乃至建筑领域的智能化水平和转型升级的瓶颈。</li></ul><p><a name="c182e73c"></a></p><h2 id="快速开始" tabindex="-1">快速开始 <a class="header-anchor" href="#快速开始" aria-label="Permalink to &quot;快速开始&quot;">​</a></h2><p>只需二步，轻松搞定SSL证书自动续签。</p><p><a name="1c4d5e8f"></a></p><h3 id="一、安装httpsok" tabindex="-1">一、安装httpsok <a class="header-anchor" href="#一、安装httpsok" aria-label="Permalink to &quot;一、安装httpsok&quot;">​</a></h3><p>登陆控制台 👉 👉 👉 <a href="https://httpsok.com/?p=4c9n" target="_blank" rel="noreferrer"><strong>获取token</strong></a></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://get.httpsok.com</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bash</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;your token&#39;</span></span></code></pre></div><p>安装成功后，脚本会自动检测一次系统中的<code>nginx</code>证书，并同步到控制台。</p><p><a name="bd6d413d"></a></p><h3 id="二、dns解析配置" tabindex="-1">二、DNS解析配置 <a class="header-anchor" href="#二、dns解析配置" aria-label="Permalink to &quot;二、DNS解析配置&quot;">​</a></h3><p><strong>根据脚本运行的实际情况</strong>，添对应的的DNS解析记录。<a href="https://httpsok.com/doc/guide/dns.html" target="_blank" rel="noreferrer">DNS解析配置参考</a></p><p><img src="https://httpsok.com/dassets/image-20240314024435126.png#id=j4GJ2&amp;originHeight=444&amp;originWidth=1504&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=" alt=""></p><p><a name="669548cb"></a></p><h3 id="三、完成" tabindex="-1">三、完成 <a class="header-anchor" href="#三、完成" aria-label="Permalink to &quot;三、完成&quot;">​</a></h3><p>没错，已经结束，SSL证书自动续签就这么简单。快登录 <a href="https://httpsok.com/?p=4c9n" target="_blank" rel="noreferrer"><strong>控制台</strong></a> 查看自己的证书吧。</p><p><img src="https://httpsok.com/dassets/image-20240422160902921.png#id=Fki2T&amp;originHeight=1658&amp;originWidth=2878&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=" alt=""></p><p><a name="4cd514f9"></a></p><h2 id="问题反馈" tabindex="-1">问题反馈 <a class="header-anchor" href="#问题反馈" aria-label="Permalink to &quot;问题反馈&quot;">​</a></h2><p>欢迎大家添加作者微信，共同交流一些技术、想法。</p><p>作者微信 请备注 <code>httpsok</code></p><p><img src="https://httpsok.com/dassets/qrcode.png#height=235&amp;id=ox3OO&amp;originHeight=992&amp;originWidth=708&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=&amp;width=168" alt=""></p>`,38),o=[n];function r(p,h,l,d,c,g){return e(),t("div",null,o)}const b=a(i,[["render",r]]);export{k as __pageData,b as default};
